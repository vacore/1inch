diff --git a/arch/arm/src/stm32f7/stm32_spi.c b/arch/arm/src/stm32f7/stm32_spi.c
index 99b9efe2b5..4197684b2c 100644
--- a/arch/arm/src/stm32f7/stm32_spi.c
+++ b/arch/arm/src/stm32f7/stm32_spi.c
@@ -2246,9 +2246,9 @@ struct spi_dev_s *stm32_spibus_initialize(int bus)
         {
           /* Configure SPI1 pins: SCK, MISO, and MOSI */
 
-          stm32_configgpio(GPIO_SPI1_SCK);
-          stm32_configgpio(GPIO_SPI1_MISO);
-          stm32_configgpio(GPIO_SPI1_MOSI);
+          stm32_configgpio(GPIO_SPI1_SCK_1);
+          stm32_configgpio(GPIO_SPI1_MISO_1);
+          stm32_configgpio(GPIO_SPI1_MOSI_1);
 
           /* Set up default configuration: Master, 8-bit, etc. */
 
diff --git a/arch/sim/src/sim/posix/sim_linuxspi.c b/arch/sim/src/sim/posix/sim_linuxspi.c
index 79c3de53d2..4bef0071f4 100644
--- a/arch/sim/src/sim/posix/sim_linuxspi.c
+++ b/arch/sim/src/sim/posix/sim_linuxspi.c
@@ -657,7 +657,8 @@ static int linux_spi_transfer(struct spi_dev_s *dev, const void *txbuffer,
     }
 #endif
 
-  return ioctl(file, SPI_IOC_MESSAGE(1), &transfer_data);
+  // return ioctl(file, SPI_IOC_MESSAGE(1), &transfer_data);
+  return write (file, txbuffer, nwords);
 }
 
 /****************************************************************************
@@ -680,6 +681,8 @@ static int linux_spi_transfer(struct spi_dev_s *dev, const void *txbuffer,
 
 struct spi_dev_s *sim_spi_initialize(const char *filename)
 {
+  filename = "/home/developer/repo/workspace/spi.txt";
+
   struct linux_spi_dev_s *priv;
 
   priv = (struct linux_spi_dev_s *)malloc(sizeof(priv));
@@ -689,7 +692,7 @@ struct spi_dev_s *sim_spi_initialize(const char *filename)
       return NULL;
     }
 
-  priv->file = open(filename, O_RDWR);
+  priv->file = open(filename, O_RDWR|O_CREAT, 0644);
   if (priv->file < 0)
     {
       ERROR("Failed to open %s: %d", filename, priv->file);
diff --git a/boards/arm/stm32f7/stm32f746g-disco/src/stm32_spi.c b/boards/arm/stm32f7/stm32f746g-disco/src/stm32_spi.c
index 7083b1aefd..f58455be0c 100644
--- a/boards/arm/stm32f7/stm32f746g-disco/src/stm32_spi.c
+++ b/boards/arm/stm32f7/stm32f746g-disco/src/stm32_spi.c
@@ -42,6 +42,10 @@
     defined(CONFIG_STM32F7_SPI3) || defined(CONFIG_STM32F7_SPI4) || \
     defined(CONFIG_STM32F7_SPI5)
 
+#ifdef CONFIG_SPI_DRIVER
+  #include <nuttx/spi/spi_transfer.h>
+#endif
+
 /****************************************************************************
  * Public Functions
  ****************************************************************************/
@@ -55,8 +59,15 @@
  *
  ****************************************************************************/
 
-void weak_function stm32_spidev_initialize(void)
-{
+void stm32_spidev_initialize (void) {
+  struct spi_dev_s *g_spi1 = stm32_spibus_initialize(1);
+  if (!g_spi1) {
+      spierr("ERROR: [boot] FAILED to initialize SPI port 1\n");
+    }
+
+  #ifdef CONFIG_SPI_DRIVER
+    spi_register(g_spi1, 1);
+  #endif
 }
 
 /****************************************************************************
diff --git a/boards/sim/sim/sim/src/sim_bringup.c b/boards/sim/sim/sim/src/sim_bringup.c
index 4234e1bad5..c1325346c0 100644
--- a/boards/sim/sim/sim/src/sim_bringup.c
+++ b/boards/sim/sim/sim/src/sim_bringup.c
@@ -416,7 +416,7 @@ int sim_bringup(void)
 #ifdef CONFIG_SYSTEM_SPITOOL
   else
     {
-      ret = spi_register(spidev, 0);
+      ret = spi_register(spidev, 1);
       if (ret < 0)
         {
           syslog(LOG_ERR, "ERROR: Failed to register SPI%d driver: %d\n",
